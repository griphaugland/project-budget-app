// SpareBank1 Budget App - Prisma Schema
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// User model for our custom authentication
model User {
  id        String   @id @default(cuid())
  name      String?
  email     String?  @unique
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  // SpareBank1 Integration - stored client-side for security
  sparebank1CustomerKey String? @unique @map("sparebank1_customer_key") // For tracking user data
  
  // App relations
  bankAccounts     BankAccount[]
  transactions     Transaction[]
  budgets          Budget[]
  categories       Category[]

  @@map("users")
}

model BankAccount {
  id               String   @id @default(cuid())
  userId           String   @map("user_id")
  
  // Core SpareBank1 account data
  accountKey       String   @unique @map("account_key") // SpareBank1 account key
  accountNumber    String   @map("account_number")
  iban             String
  name             String   // Account display name
  description      String   // Account description/type
  
  // Balance information
  balance          Decimal  @db.Decimal(12, 2)
  availableBalance Decimal  @db.Decimal(12, 2) @map("available_balance")
  currencyCode     String   @default("NOK") @map("currency_code")
  
  // SpareBank1 metadata
  productType      String   @map("product_type") // e.g., "LOCDEPOSIT"
  accountType      String   @map("account_type") // e.g., "USER", "SAVING", "BSU"
  productId        String   @map("product_id")
  descriptionCode  String   @map("description_code")
  disposalRole     Boolean  @default(false) @map("disposal_role")
  
  // Account properties (key flags)
  isTransferFromEnabled    Boolean @default(true) @map("is_transfer_from_enabled")
  isTransferToEnabled      Boolean @default(true) @map("is_transfer_to_enabled")
  isPaymentFromEnabled     Boolean @default(true) @map("is_payment_from_enabled")
  isDefaultPaymentAccount  Boolean @default(false) @map("is_default_payment_account")
  isSavingsAccount         Boolean @default(false) @map("is_savings_account")
  isOwned                  Boolean @default(true) @map("is_owned")
  isBlocked                Boolean @default(false) @map("is_blocked")
  isHidden                 Boolean @default(false) @map("is_hidden")
  
  // Timestamps
  createdAt        DateTime @default(now()) @map("created_at")
  updatedAt        DateTime @updatedAt @map("updated_at")
  lastSyncedAt     DateTime @default(now()) @map("last_synced_at")

  // Relations
  user         User          @relation(fields: [userId], references: [id], onDelete: Cascade)
  transactions Transaction[]

  @@map("bank_accounts")
}

model Transaction {
  id              String   @id @default(cuid())
  userId          String   @map("user_id")
  accountId       String   @map("account_id")
  
  // SpareBank1 integration
  sparebank1Id    String?  @unique @map("sparebank1_id") // SpareBank1 transaction ID (null for manual)
  
  // Core transaction data
  amount          Decimal  @db.Decimal(12, 2)
  currency        String   @default("NOK")
  description     String
  merchantName    String?  @map("merchant_name")
  transactionDate DateTime @map("transaction_date") // When the transaction occurred
  
  // Classification
  categoryId      String?  @map("category_id")
  isIncome        Boolean  @default(false) @map("is_income") // True for positive transactions
  isRecurring     Boolean  @default(false) @map("is_recurring")
  isManual        Boolean  @default(false) @map("is_manual") // User-added vs SpareBank1
  
  // SpareBank1 metadata (for sync tracking)
  sparebank1Type        String? @map("sparebank1_type")
  sparebank1Code        String? @map("sparebank1_code")
  sparebank1Reference   String? @map("sparebank1_reference")
  
  // Notes and tags
  userNotes       String?
  tags            String[] @default([])
  
  // Timestamps
  createdAt       DateTime @default(now()) @map("created_at")
  updatedAt       DateTime @updatedAt @map("updated_at")
  syncedAt        DateTime? @map("synced_at") // When synced from SpareBank1

  // Relations
  user     User        @relation(fields: [userId], references: [id], onDelete: Cascade)
  account  BankAccount @relation(fields: [accountId], references: [id], onDelete: Cascade)
  category Category?   @relation(fields: [categoryId], references: [id])

  @@map("transactions")
}

model Category {
  id          String   @id @default(cuid())
  userId      String   @map("user_id")
  name        String
  color       String   // Hex color code for UI
  icon        String?  // Icon name/emoji
  description String?  // Optional description
  isIncome    Boolean  @default(false) @map("is_income") // Income vs expense category
  sortOrder   Int      @default(0) @map("sort_order") // For custom ordering
  isActive    Boolean  @default(true) @map("is_active")
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt @map("updated_at")

  // Relations
  user         User          @relation(fields: [userId], references: [id], onDelete: Cascade)
  transactions Transaction[]
  budgets      Budget[]

  @@unique([userId, name])
  @@map("categories")
}

model Budget {
  id         String   @id @default(cuid())
  userId     String   @map("user_id")
  categoryId String   @map("category_id")
  
  // Budget details
  name       String
  amount     Decimal  @db.Decimal(12, 2) // Budget limit amount
  currency   String   @default("NOK")
  period     String   // 'monthly', 'weekly', 'yearly', 'custom'
  
  // Date range
  startDate  DateTime @map("start_date")
  endDate    DateTime? @map("end_date") // Null for recurring budgets
  
  // Configuration
  isRecurring     Boolean @default(true) @map("is_recurring") // Auto-renew each period
  alertThreshold  Int     @default(80) @map("alert_threshold") // % of budget to trigger alert
  isActive        Boolean @default(true) @map("is_active")
  
  // Tracking (calculated fields)
  currentSpent    Decimal @default(0) @db.Decimal(12, 2) @map("current_spent")
  lastCalculated  DateTime? @map("last_calculated")
  
  // Metadata
  description String?
  color       String? // Override category color
  
  // Timestamps
  createdAt  DateTime @default(now()) @map("created_at")
  updatedAt  DateTime @updatedAt @map("updated_at")

  // Relations
  user     User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  category Category @relation(fields: [categoryId], references: [id], onDelete: Cascade)

  @@map("budgets")
}
